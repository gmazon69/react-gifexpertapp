{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.jsx","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.jsx","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","nuevo","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","key","src","alt","GifGrid","loading","estado","setEstado","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorias","categoria","idx","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAchD,OACI,0BAAMC,SATW,SAAEC,GACnBA,EAAEC,iBACEJ,EAAWK,OAAOC,QAAU,IAC5BR,GAAe,SAAAS,GAAK,OAAMP,GAAN,mBAAqBO,OACzCN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAjBS,SAAEP,GACnBF,EAAcE,EAAEQ,OAAOF,QAiBfG,YAAY,gB,uBCrBXC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAYH,GADhD,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCAXO,EAAc,SAAC,GAA0B,IAAvBJ,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAEtC,OACI,yBAAKc,UAAU,8CACX,yBAAKC,IAAMN,EAAIO,IAAMhB,EAAMiB,IAAMP,IACjC,+BAAMA,KCHLQ,EAAU,SAAC,GAAmB,IAAhBpB,EAAe,EAAfA,SAAe,ECDd,SAAEA,GAAe,IAAD,EACZf,mBAAS,CACjCsB,KAAM,GACNc,SAAS,IAH2B,mBACjCC,EADiC,KACzBC,EADyB,KAgBxC,OAVAC,qBAAW,WACPzB,EAASC,GACRyB,MAAM,SAAAC,GACHH,EAAU,CACNhB,KAAMmB,EACNL,SAAS,SAGlB,CAAErB,IAEGsB,EDdmBK,CAAc3B,GAAjCO,EAD8B,EAC9BA,KAAOc,EADuB,EACvBA,QACf,OACI,oCACA,wBAAIL,UAAU,2DAA4DhB,GACxEqB,GAAW,uBAAGL,UAAU,oCAAb,eAEb,yBAAKA,UAAU,aAEPT,EAAKE,KAAK,SAAAC,GAAG,OACT,kBAAC,EAAD,eACIO,IAAMP,EAAIC,IACLD,UEWdkB,EAtBM,WAAO,IAAD,EACa3C,mBAAS,CAAC,cADvB,mBAChB4C,EADgB,KACJ7C,EADI,KAGvB,OACI,oCACA,wCACA,kBAAC,EAAD,CAAaA,cAAkBA,IAC/B,6BACA,4BAEQ6C,EAAWpB,KAAK,SAACqB,EAAWC,GAC5B,OAAO,kBAAC,EAAD,CACKd,IAAKc,EACL/B,SAAW8B,U,MCbvCE,IAASC,OACP,kBAAC,EAAD,MAEAC,SAASC,eAAe,U","file":"static/js/main.6b8703d1.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ( { setCategorias } ) => {\n    const [inputValue, setInputValue] = useState('')\n    const handleChange = ( e ) => {\n        setInputValue(e.target.value)\n    }\n    \n    const handleSubmit = ( e ) =>{\n        e.preventDefault();\n        if (inputValue.trim().length >= 2 ) {\n            setCategorias( nuevo => [ inputValue, ...nuevo, ] );\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={ handleChange }\n                placeholder='Buscar...'\n            >                \n            </input>       \n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategorias: PropTypes.func.isRequired\n}\n\n","\n\n    export const getGifs = async( category ) => {\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI ( category )}&limit=10&api_key=VUNpi3gfF2BpHAB6v3ZstnWXHeztClQa`;\n\n        const resp = await fetch( url );\n        const { data } = await resp.json();\n\n        const gifs = data.map( img => {\n            return {\n                id: img.id,\n                title: img.title,\n                url: img.images?.downsized_medium.url,\n            }\n        })\n\n        return gifs;\n    }\n","import React from 'react'\n\nexport const GifGridItem = ( { id, title, url } ) => {\n    // console.log( id, title, url );\n    return (\n        <div className='card animate__animated animate__fadeInLeft'>\n            <img key={ id} src={ url } alt={ title } />\n            <p> { title }</p>\n        </div>\n    )\n}\n","import React  from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ( { category }) => {\n    const { data,  loading } = useFetchGifs( category );\n    return (\n        <>\n        <h3 className='animate__animated animate__rubberBand animate__delay-1s'>{ category }</h3>      \n        { loading && <p className='animate__animated animate__flash'>Cargando...</p>}\n\n        <div className='card-grid'>\n            {\n                data.map( img => (\n                    <GifGridItem \n                        key={ img.id }\n                        { ...img }\n                    />\n                ))\n            }\n        </div>\n        </>\n    )\n}\n","import { useEffect, useState } from 'react'\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category ) => {\n    const [estado, setEstado] = useState({\n        data: [],\n        loading: true\n    })\n\n    useEffect( () => {\n        getGifs( category )\n        .then( imgs => {\n            setEstado({\n                data: imgs,\n                loading: false\n            })\n        })\n    }, [ category ]);\n\n    return (estado);\n}\n\n","import React from 'react'\nimport { useState } from 'react'\nimport { AddCategory } from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid'\n\nconst GifExpertApp = () => {\n    const [categorias, setCategorias] = useState(['One Punch'])\n \n    return (\n        <>\n        <h2>GIFs App</h2>\n        <AddCategory setCategorias = { setCategorias }/>\n        <hr />\n        <ol>\n            {\n                categorias.map( (categoria, idx ) => {\n                return <GifGrid \n                            key={idx} \n                            category={ categoria }>\n                        </GifGrid>\n                })\n            }\n        </ol>\n        </>\n    )\n}\n\nexport default GifExpertApp;\n// A2141","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n    // <App />, \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}